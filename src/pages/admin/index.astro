---
import Layout from '../../layouts/Layout.astro';
import Header from '../../react/Header';
import { getStore } from '~/utils/blob-store';
import type { Gallery } from '~/types/gallery';
import Hero from '~/components/Hero.astro';

export const prerender = false;

// Get admin secret from cookie
const cookies = Astro.request.headers.get('cookie')?.split(';') || [];
const adminSecretCookie = cookies.find(cookie => cookie.trim().startsWith('admin_secret='));
const adminSecret = adminSecretCookie ? adminSecretCookie.split('=')[1] : null;

// Check if user is authorized
if (!adminSecret || adminSecret !== import.meta.env.ADMIN_SECRET) {
  return Astro.redirect('/');
}

// Get all galleries
const store = getStore('galleries');
const { blobs } = await store.list({
  prefix: 'gallery/',
});

interface GalleryWithMetadata extends Gallery {
  key: string;
  lastModified: number;
}

// Parse gallery data
const galleries = await Promise.all(
  blobs.map(async (blob: { key: string; lastModified: number }) => {
    const data = await store.get(blob.key, { type: 'json' }) as Gallery;
    return {
      ...data,
      key: blob.key,
      lastModified: blob.lastModified,
    } as GalleryWithMetadata;
  })
);

// Sort galleries by last modified date
galleries.sort((a: GalleryWithMetadata, b: GalleryWithMetadata) => b.lastModified - a.lastModified);
---

<Layout title="Admin - Galleries" id="admin">
  <Header client:load />
  <Hero title="Admin" />
  <div class="container mx-auto px-4 py-8">
    <div class="mb-8">
      <a href="/gallery/home/edit" class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded">
        Edit Home Gallery
      </a>
    </div>

    <div class="grid gap-6">
      {galleries.map((gallery: GalleryWithMetadata) => (
        <div class="bg-white shadow rounded-lg p-6">
          <div class="flex justify-between items-start">
            <div>
              <h2 class="text-xl font-semibold mb-2">{gallery.title}</h2>
              <p class="text-gray-600 mb-2">Slug: {gallery.slug}</p>
              <p class="text-sm text-gray-500">
                Last modified: {new Date(gallery.lastModified).toLocaleString()}
              </p>
            </div>
            <div class="flex gap-2">
              <a
                href={`/gallery/${gallery.slug}`}
                class="bg-gray-100 hover:bg-gray-200 text-gray-800 px-3 py-1 rounded"
                target="_blank"
              >
                View
              </a>
              <a
                href={`/gallery/${gallery.slug}/edit`}
                class="bg-blue-500 hover:bg-blue-600 text-white px-3 py-1 rounded"
              >
                Edit
              </a>
              <a
                href={`/gallery/${gallery.slug}/admin`}
                class="bg-green-500 hover:bg-green-600 text-white px-3 py-1 rounded"
              >
                Uploads
              </a>
              <button
                class="bg-purple-500 hover:bg-purple-600 text-white px-3 py-1 rounded"
                onclick={`window.dispatchEvent(new CustomEvent('openJsonEditor', { detail: ${JSON.stringify(gallery)} }))`}
              >
                Edit JSON
              </button>
              <button
                class="bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded"
                onclick={`if(confirm('Are you sure you want to delete this gallery?')) {
                  fetch('/api/gallery?slug=${gallery.slug}', { method: 'DELETE' })
                    .then(response => response.json())
                    .then(data => {
                      if (data.success) {
                        window.location.reload();
                      } else {
                        alert('Failed to delete gallery');
                      }
                    });
                }`}
              >
                Delete
              </button>
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</Layout>

